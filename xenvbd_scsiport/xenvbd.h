/*
PV Drivers for Windows Xen HVM Domains

Copyright (c) 2014, James Harper
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of James Harper nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL JAMES HARPER BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#if !defined(_XENVBD_H_)
#define _XENVBD_H_

#include <ntddk.h>
//#include <wdm.h>
#include <initguid.h>
#define NTSTRSAFE_LIB
#include <ntstrsafe.h>

#if (NTDDI_VERSION < NTDDI_WINXP) /* srb.h causes warnings under 2K for some reason */
#pragma warning(disable:4201) /* nameless struct/union */
#pragma warning(disable:4214) /* bit field types other than int */
#endif

#include <srb.h>
#include <scsi.h>
#include <ntddscsi.h>
#include <ntdddisk.h>
#include <stdlib.h>

#define __DRIVER_NAME "XenVbd"

#include <xen_windows.h>
#include <xen_public.h>
#include <io/protocols.h>
#include <memory.h>
#include <event_channel.h>
#include <hvm/params.h>
#include <hvm/hvm_op.h>
#include <io/ring.h>
#include <io/blkif.h>
#include <io/xenbus.h>

#include "..\xenvbd_common\common.h"

#define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))
#define BLK_RING_SIZE __RING_SIZE((blkif_sring_t *)0, PAGE_SIZE)

#define SHADOW_ID_ID_MASK   0x03FF /* maximum of 1024 requests - currently use a maximum of 64 though */
#define SHADOW_ID_DUMP_FLAG 0x8000 /* indicates the request was generated by dump mode */

/* if this is ever increased to more than 1 then we need a way of tracking it properly */
#define DUMP_MODE_UNALIGNED_PAGES 1 /* only for unaligned buffer use */

#include "common.h"

struct {
  PXENVBD_DEVICE_DATA xvdd;
  ULONG outstanding;
  PVOID hypercall_stubs;
  PSCSI_REQUEST_BLOCK stop_srb;
  /* this is the size of the buffer to allocate at the end of DeviceExtenstion. It includes an extra PAGE_SIZE-1 bytes to assure that we can always align to PAGE_SIZE */
  #define UNALIGNED_BUFFER_DATA_SIZE ((BLKIF_MAX_SEGMENTS_PER_REQUEST + 1) * PAGE_SIZE - 1)
  #define UNALIGNED_BUFFER_DATA_SIZE_DUMP_MODE ((DUMP_MODE_UNALIGNED_PAGES + 1) * PAGE_SIZE - 1)
  /* this has to be right at the end of DeviceExtension */
  /* can't allocate too much data in dump mode so size DeviceExtensionSize accordingly */
  UCHAR aligned_buffer_data[1];
} typedef XENVBD_SCSIPORT_DATA, *PXENVBD_SCSIPORT_DATA;

#endif
